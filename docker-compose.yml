version: '3'

services:
  database:
    image: 'mongo'
    container_name: '${PROJECT_NAME}-db'
    restart: always
    environment:
      - MONGO_INITDB_DATABASE=${PROJECT_NAME}_db
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root
    volumes:
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - ./mongo-volume:/data/db
    ports:
      - ${DB_PORT}:27017
    networks:
      static-network:
        ipv4_address: 172.20.128.1

  frontend:
    image: 'node:16'
    container_name: '${PROJECT_NAME}-front'
    restart: always
    stdin_open: true
    user: 0:0
    depends_on:
      - backend
    volumes:
      - ./front:/usr/src/app
    ports:
      - ${FRONTEND_PORT}:3000
    command: >
      bash -c 'cd /usr/src/app && npm install --force && npm start'
    networks:
      static-network:
        ipv4_address: 172.20.128.2

  # backend:
  #   image: 'debian'
  #   container_name: '${PROJECT_NAME}-api'
  #   restart: always
  #   stdin_open: true
  #   depends_on:
  #     - database
  #   volumes:
  #     - ./api:/usr/src/app
  #   ports:
  #     - ${API_PORT}:7000
  #   command: bash /usr/src/app/runServer.sh
  #   networks:
  #     static-network:
  #       ipv4_address: 172.20.128.3

  backend:
    image: 'node:16'
    container_name: '${PROJECT_NAME}-api'
    restart: always
    stdin_open: true
    user: 0:0
    depends_on:
      - database
    volumes:
      - ./api-nodejs:/usr/src/app
    ports:
      - ${API_PORT}:7000
    command: >
      bash -c "cd /usr/src/app && npm i -g nodemon && npm install && npm run dev"
    networks:
      static-network:
        ipv4_address: 172.20.128.3

networks:
  static-network:
    ipam:
      config:
        - subnet: 172.20.0.0/16
